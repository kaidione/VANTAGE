//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AventStack.ExtentReports.Resources.View {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Views {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Views() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AventStack.ExtentReports.Resources.View.Views", typeof(Views).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;#list test.nodeContext.all as node&gt;
        ///    &lt;div class=&apos;${ node.getBehaviorDrivenType().getSimpleName()?lower_case } node&apos; test-id=&apos;${ node.getID() }&apos; status=&apos;${ node.status }&apos;&gt;
        ///        &lt;#if node.hasCategory()&gt;
        ///            &lt;div class=&apos;category-list&apos;&gt;
        ///                &lt;#list node.categoryList as category&gt;
        ///                    &lt;span class=&apos;category label white-text&apos;&gt;${ category.name }&lt;/span&gt;
        ///                &lt;/#list&gt;
        ///            &lt;/div&gt;
        ///        &lt;/#if&gt;
        ///        &lt;span class=&apos;${ node.getBehaviorDrivenType().get [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Bdd {
            get {
                return ResourceManager.GetString("Bdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @if (Model.CategoryContext != null &amp;&amp; Model.CategoryContext.TestAttributeContextCollection.Count &gt; 0)
        ///{
        ///    var context = @Model.CategoryContext.TestAttributeContextCollection;
        ///
        ///    &lt;div id=&apos;category-view&apos; class=&apos;view hide&apos;&gt;
        ///        &lt;section id=&apos;controls&apos;&gt;
        ///            &lt;div class=&apos;controls grey lighten-4&apos;&gt;
        ///                &lt;!-- search --&gt;
        ///                &lt;div class=&apos;chip transparent&apos; alt=&apos;Search Tests&apos; title=&apos;Search Tests&apos;&gt;
        ///                    &lt;a href=&quot;#&quot; class=&apos;search-div&apos;&gt;
        ///                         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CategoryView {
            get {
                return ResourceManager.GetString("CategoryView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @using System
        ///
        ///@{ 
        ///    var sessionStatusStats = Model.SessionStatusStats;
        ///
        ///    var t = Model.TestList[0];
        ///    var bdd = t.HasChildren() &amp;&amp; t.NodeContext().Get(0).IsBehaviorDrivenType;
        ///
        ///    var currentTime = DateTime.Now;
        ///    var runDuration = DateTime.Now - Model.StartTime;
        ///}
        ///
        ///&lt;div id=&apos;dashboard-view&apos; class=&apos;view hide&apos;&gt;
        ///    &lt;div class=&apos;card-panel transparent np-v&apos;&gt;
        ///        &lt;h5&gt;Dashboard&lt;/h5&gt;
        ///
        ///        &lt;div class=&apos;row&apos;&gt;
        ///            &lt;div class=&apos;col s2&apos;&gt;
        ///                &lt;div class=&apos;card-panel  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DashboardView {
            get {
                return ResourceManager.GetString("DashboardView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @using System.Collections.Generic;
        ///@using AventStack.ExtentReports;
        ///
        ///@{ 
        ///    var exceptionContext = Model.ExceptionContext;
        ///
        ///    List&lt;ExceptionTestContext&gt; context = null;
        ///    if (exceptionContext != null)
        ///    {
        ///        context = Model.ExceptionContext.ExceptionTestContextCollection;
        ///    }
        ///}
        ///
        ///@if (context != null)
        ///{
        ///    &lt;div id=&apos;exception-view&apos; class=&apos;view hide&apos;&gt;
        ///
        ///        &lt;section id=&apos;controls&apos;&gt;
        ///            &lt;div class=&apos;controls grey lighten-4&apos;&gt;
        ///                &lt;!-- search --&gt;
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExceptionView {
            get {
                return ResourceManager.GetString("ExceptionView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;head&gt;
        ///    &lt;meta charset=&apos;@Model.GetReporterConfigurationSetting(&quot;encoding&quot;)&apos; /&gt;
        ///    &lt;meta name=&apos;description&apos; content=&apos;&apos; /&gt;
        ///    &lt;meta name=&apos;robots&apos; content=&apos;noodp, noydir&apos; /&gt;
        ///    &lt;meta name=&apos;viewport&apos; content=&apos;width=device-width, initial-scale=1&apos; /&gt;
        ///
        ///    &lt;link href=&apos;@Model.GetReporterConfigurationSetting(&quot;protocol&quot;)://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;
        ///    &lt;link href=&quot;@Model.GetReporterConfigurationSetting(&quot;protocol&quot;)://fonts.googleapis.com/icon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Head {
            get {
                return ResourceManager.GetString("Head", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @using RazorEngine
        ///@using RazorEngine.Templating
        ///@using AventStack.ExtentReports.Reporter.Configuration.Defaults
        ///
        ///&lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///
        ///    @Include(&quot;head&quot;)
        ///    
        ///    @{
        ///        var t = Model.TestList[0];
        ///        var bdd = t.HasChildren() &amp;&amp; t.NodeContext().Get(0).IsBehaviorDrivenType;
        ///
        ///        var bddClass = &quot;&quot;;
        ///        if (bdd)
        ///        {
        ///            bddClass = &quot;bdd&quot;;
        ///        }
        ///    }
        ///
        ///	&lt;body class=&apos;extent @Model.GetReporterConfigurationSetting(&quot;theme&quot;) default hide-overflow @bddClass&apos;&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Index {
            get {
                return ResourceManager.GetString("Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;nav&gt;
        ///    &lt;div class=&quot;nav-wrapper&quot;&gt;
        ///        &lt;a href=&quot;http://extentreports.relevantcodes.com&quot; class=&quot;brand-logo blue darken-3&quot;&gt;Extent&lt;/a&gt;
        ///
        ///        &lt;!-- slideout menu --&gt;
        ///        &lt;ul id=&apos;slide-out&apos; class=&apos;side-nav fixed hide-on-med-and-down&apos;&gt;
        ///            &lt;li class=&apos;waves-effect active&apos;&gt;&lt;a href=&apos;#!&apos; view=&apos;test-view&apos; onclick=&quot;configureView(0);chartsView(&apos;test&apos;);&quot;&gt;&lt;i class=&apos;material-icons&apos;&gt;dashboard&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
        ///            @if (Model.CategoryContext != null &amp;&amp; Model.CategoryContext.TestAttributeContextCo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Nav {
            get {
                return ResourceManager.GetString("Nav", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Standard {
            get {
                return ResourceManager.GetString("Standard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @using System.Collections.Generic;
        ///@using AventStack.ExtentReports;
        ///
        ///@{ 
        ///    var exceptionContext = Model.ExceptionContext;
        ///
        ///    List&lt;ExceptionTestContext&gt; context = null;
        ///    if (exceptionContext != null)
        ///    {
        ///        context = Model.ExceptionContext.ExceptionTestContextCollection;
        ///    }
        ///}
        ///
        ///@if (context != null)
        ///{
        ///
        ///}.
        /// </summary>
        internal static string TestRunnerLogs {
            get {
                return ResourceManager.GetString("TestRunnerLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @using AventStack.ExtentReports.ViewDefs
        ///
        ///&lt;div id=&apos;test-view&apos; class=&apos;view&apos;&gt;
        ///
        ///    &lt;section id=&apos;controls&apos;&gt;
        ///        &lt;div class=&apos;controls grey lighten-4&apos;&gt;
        ///            &lt;!-- test toggle --&gt;
        ///            &lt;div class=&apos;chip transparent&apos;&gt;
        ///                &lt;a class=&apos;dropdown-button tests-toggle&apos; data-activates=&apos;tests-toggle&apos; data-constrainwidth=&apos;true&apos; data-beloworigin=&apos;true&apos; data-hover=&apos;true&apos; href=&apos;#&apos;&gt;
        ///                    &lt;i class=&apos;material-icons&apos;&gt;warning&lt;/i&gt; Status
        ///                &lt;/a&gt;
        ///                &lt;ul id= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestView {
            get {
                return ResourceManager.GetString("TestView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @{
        ///    var t = Model.TestList[0];
        ///    var bdd = t.HasChildren() &amp;&amp; t.NodeContext().Get(0).IsBehaviorDrivenType;
        ///
        ///    var size = &quot;s12 m6 l6&quot;;
        ///    var testsViewChartsHeading = &quot;Tests&quot;;
        ///    var stepsViewChartsHeading = &quot;Steps&quot;;
        ///    if (bdd)
        ///    {
        ///        size = &quot;s12 m4 l4&quot;;
        ///        testsViewChartsHeading = &quot;Features&quot;;
        ///        stepsViewChartsHeading = &quot;Scenarios&quot;;
        ///    }
        ///}
        ///
        ///&lt;div id=&apos;test-view-charts&apos; class=&apos;subview-full&apos;&gt;
        ///    &lt;div id=&apos;charts-row&apos; class=&apos;row nm-v nm-h&apos;&gt;
        ///        &lt;div class=&apos;col @s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestViewCharts {
            get {
                return ResourceManager.GetString("TestViewCharts", resourceCulture);
            }
        }
    }
}
