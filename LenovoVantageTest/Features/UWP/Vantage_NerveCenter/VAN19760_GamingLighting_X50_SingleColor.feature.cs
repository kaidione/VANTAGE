// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.4.0.0
//      SpecFlow Generator Version:3.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LenovoVantageTest.Features.UWP.Vantage_NerveCenter
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("VAN19760_GamingLighting_X50_SingleColor")]
    [NUnit.Framework.CategoryAttribute("GetLightingFile")]
    public partial class VAN19760_GamingLighting_X50_SingleColorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "GetLightingFile"};
        
#line 1 "VAN19760_GamingLighting_X50_SingleColor.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/UWP/Vantage_NerveCenter", "VAN19760_GamingLighting_X50_SingleColor", "\tTest Case： https://jira.tc.lenovo.com/browse/VAN-19760\r\n\tAuthor： wenyang", ProgrammingLanguage.CSharp, new string[] {
                        "GetLightingFile"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep01 check the default profile")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep01CheckTheDefaultProfile()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep01 check the default profile", null, tagsOfScenario, argumentsOfScenario);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Then("The Lighting section is display or not display in homepage \'display\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 9
 testRunner.When("set lighting profile to default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 12
 testRunner.Then("lighting profile 1 is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep02 check the SingleColor effect")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep02CheckTheSingleColorEffect()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep02 check the SingleColor effect", null, tagsOfScenario, argumentsOfScenario);
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 16
 testRunner.Then("The Lighting section is display or not display in homepage \'display\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 18
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 19
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 20
 testRunner.Then("Take Screen Shot TestStep02 in 19760 under GamingLighting_X50_SingleColor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                            "Effect name"});
                table178.AddRow(new string[] {
                            "Always On"});
                table178.AddRow(new string[] {
                            "Fast Blink"});
                table178.AddRow(new string[] {
                            "Slow Blink"});
                table178.AddRow(new string[] {
                            "Breath"});
#line 21
 testRunner.Then("effect dropdown menu should be expanded and effects should be shown:", ((string)(null)), table178, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep03 check the off tips")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("SingleColor")]
        public virtual void VAN19760_TestStep03CheckTheOffTips()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "SingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep03 check the off tips", null, tagsOfScenario, argumentsOfScenario);
#line 29
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 30
 testRunner.Then("The Lighting section is display or not display in homepage \'display\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 32
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 33
 testRunner.Given("select the profile off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 34
 testRunner.Then("profile tips shows normally", "Lighting is currently off. Select the profile tab above to turn it on and customi" +
                        "ze it.", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep0401 check the profile 1 default effect(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        public virtual void VAN19760_TestStep0401CheckTheProfile1DefaultEffectT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep0401 check the profile 1 default effect(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 40
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 41
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 42
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 43
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 44
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 45
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep0402 check the profile 1 default effect(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep0402CheckTheProfile1DefaultEffectT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep0402 check the profile 1 default effect(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 50
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 51
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 52
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 53
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 54
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 55
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 56
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep05 check the profile 1 default effect")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep05CheckTheProfile1DefaultEffect()
        {
            string[] tagsOfScenario = new string[] {
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep05 check the profile 1 default effect", null, tagsOfScenario, argumentsOfScenario);
#line 60
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 61
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 62
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 63
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 65
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.Then("The \"\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep06 check the profile 1 default brightness")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        public virtual void VAN19760_TestStep06CheckTheProfile1DefaultBrightness()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep06 check the profile 1 default brightness", null, tagsOfScenario, argumentsOfScenario);
#line 70
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 71
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 72
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 73
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 74
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 75
 testRunner.Then("Brightness bar should be shown and the value should be \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep07 check the profile 1 brightness will be hide")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep07CheckTheProfile1BrightnessWillBeHide()
        {
            string[] tagsOfScenario = new string[] {
                    "T550GSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep07 check the profile 1 brightness will be hide", null, tagsOfScenario, argumentsOfScenario);
#line 78
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 79
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 80
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 81
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 82
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep08 check the profile 1 speed will be hide")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        public virtual void VAN19760_TestStep08CheckTheProfile1SpeedWillBeHide()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep08 check the profile 1 speed will be hide", null, tagsOfScenario, argumentsOfScenario);
#line 85
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 86
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 87
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 88
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 89
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep0901 check the profile 1 lighting effect is Always On color shou" +
            "ld be blue(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        public virtual void VAN19760_TestStep0901CheckTheProfile1LightingEffectIsAlwaysOnColorShouldBeBlueT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep0901 check the profile 1 lighting effect is Always On color shou" +
                    "ld be blue(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 92
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 93
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 94
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 95
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 96
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 97
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep0902 check the profile 1 lighting effect is Always On color shou" +
            "ld be blue(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep0902CheckTheProfile1LightingEffectIsAlwaysOnColorShouldBeBlueT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep0902 check the profile 1 lighting effect is Always On color shou" +
                    "ld be blue(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 102
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 103
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 104
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 105
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 106
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 107
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 108
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep10 check the profile 1 lighting effect is Always On color should" +
            " be red")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        public virtual void VAN19760_TestStep10CheckTheProfile1LightingEffectIsAlwaysOnColorShouldBeRed()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep10 check the profile 1 lighting effect is Always On color should" +
                    " be red", null, tagsOfScenario, argumentsOfScenario);
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 113
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 114
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 115
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 116
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 117
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 118
 testRunner.Then("The \"\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 119
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep11 check the profile 1 lighting effect is Breath color should be" +
            " blue")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep11CheckTheProfile1LightingEffectIsBreathColorShouldBeBlue()
        {
            string[] tagsOfScenario = new string[] {
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep11 check the profile 1 lighting effect is Breath color should be" +
                    " blue", null, tagsOfScenario, argumentsOfScenario);
#line 122
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 123
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 124
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 125
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 126
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 127
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 128
 testRunner.Then("The \"\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep1201 check the profile 2 default effect(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep1201CheckTheProfile2DefaultEffectT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep1201 check the profile 2 default effect(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 132
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 133
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 134
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 135
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 136
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 137
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 138
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 139
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep1202 check the profile 2 default effect(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep1202CheckTheProfile2DefaultEffectT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep1202 check the profile 2 default effect(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 142
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 143
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 144
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 145
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 146
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 147
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 148
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep13 check the profile 2 brightness will be hide")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep13CheckTheProfile2BrightnessWillBeHide()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep13 check the profile 2 brightness will be hide", null, tagsOfScenario, argumentsOfScenario);
#line 152
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 153
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 154
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 155
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 156
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep14 check the profile 2 speed will be hide")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep14CheckTheProfile2SpeedWillBeHide()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep14 check the profile 2 speed will be hide", null, tagsOfScenario, argumentsOfScenario);
#line 159
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 160
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 161
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 162
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 163
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep1501 check the profile 2 lighting effect is Fast Blink color is " +
            "blue frequency is 2s(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep1501CheckTheProfile2LightingEffectIsFastBlinkColorIsBlueFrequencyIs2ST550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep1501 check the profile 2 lighting effect is Fast Blink color is " +
                    "blue frequency is 2s(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 166
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 167
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 168
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 169
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 170
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 171
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 172
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 173
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep1502 check the profile 2 lighting effect is Fast Blink color is " +
            "blue frequency is 2s(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep1502CheckTheProfile2LightingEffectIsFastBlinkColorIsBlueFrequencyIs2ST550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep1502 check the profile 2 lighting effect is Fast Blink color is " +
                    "blue frequency is 2s(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 176
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 177
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 178
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 179
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 180
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 181
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 182
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 183
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep16 check the profile 2 lighting effect is Fast Blink color is re" +
            "d frequency is 2s")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        public virtual void VAN19760_TestStep16CheckTheProfile2LightingEffectIsFastBlinkColorIsRedFrequencyIs2S()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep16 check the profile 2 lighting effect is Fast Blink color is re" +
                    "d frequency is 2s", null, tagsOfScenario, argumentsOfScenario);
#line 186
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 187
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 188
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 189
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 190
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 191
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 192
 testRunner.Then("The \"\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 193
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep1701 check the profile 3 default effect(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep1701CheckTheProfile3DefaultEffectT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep1701 check the profile 3 default effect(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 196
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 197
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 198
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 199
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 200
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 201
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 202
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 203
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep1702 check the profile 3 default effect(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep1702CheckTheProfile3DefaultEffectT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep1702 check the profile 3 default effect(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 206
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 207
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 208
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 209
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 210
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 211
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 212
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 213
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep18 check the profile 3 default effect")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep18CheckTheProfile3DefaultEffect()
        {
            string[] tagsOfScenario = new string[] {
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep18 check the profile 3 default effect", null, tagsOfScenario, argumentsOfScenario);
#line 216
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 217
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 218
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 219
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 220
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 221
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 222
 testRunner.Then("The \"\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 223
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep19 check the profile 3 brightness will be hide")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep19CheckTheProfile3BrightnessWillBeHide()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep19 check the profile 3 brightness will be hide", null, tagsOfScenario, argumentsOfScenario);
#line 226
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 227
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 228
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 229
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 230
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep20 check the profile 3 default brightness")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep20CheckTheProfile3DefaultBrightness()
        {
            string[] tagsOfScenario = new string[] {
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep20 check the profile 3 default brightness", null, tagsOfScenario, argumentsOfScenario);
#line 233
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 234
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 235
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 236
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 237
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 238
 testRunner.Then("Brightness bar should be shown and the value should be \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2101 check the profile 3 lighting effect is Breath color should " +
            "be blue(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        public virtual void VAN19760_TestStep2101CheckTheProfile3LightingEffectIsBreathColorShouldBeBlueT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2101 check the profile 3 lighting effect is Breath color should " +
                    "be blue(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 241
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 242
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 243
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 244
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 245
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 246
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 247
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2102 check the profile 3 lighting effect is Breath color should " +
            "be blue(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep2102CheckTheProfile3LightingEffectIsBreathColorShouldBeBlueT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2102 check the profile 3 lighting effect is Breath color should " +
                    "be blue(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 251
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 252
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 253
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 254
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 255
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 256
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 257
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 258
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep22 check the profile 3 lighting effect is Breath color should be" +
            " red")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        public virtual void VAN19760_TestStep22CheckTheProfile3LightingEffectIsBreathColorShouldBeRed()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep22 check the profile 3 lighting effect is Breath color should be" +
                    " red", null, tagsOfScenario, argumentsOfScenario);
#line 261
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 262
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 263
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 264
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 265
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 266
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 267
 testRunner.Then("The \"\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 268
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep23 check the profile 3 lighting effect is Always On color should" +
            " be blue")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep23CheckTheProfile3LightingEffectIsAlwaysOnColorShouldBeBlue()
        {
            string[] tagsOfScenario = new string[] {
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep23 check the profile 3 lighting effect is Always On color should" +
                    " be blue", null, tagsOfScenario, argumentsOfScenario);
#line 271
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 272
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 273
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 274
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 275
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 276
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 277
 testRunner.Then("The \"\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 278
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2501 check the S3S4 the effect will be keeped(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep2501CheckTheS3S4TheEffectWillBeKeepedT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2501 check the S3S4 the effect will be keeped(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 281
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 282
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 283
 testRunner.When("set lighting profile to default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 284
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 285
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 286
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 287
 testRunner.When("Enter sleep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 288
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 289
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 290
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2502 check the S3S4 the effect will be keeped(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep2502CheckTheS3S4TheEffectWillBeKeepedT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2502 check the S3S4 the effect will be keeped(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 293
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 294
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 295
 testRunner.When("set lighting profile to default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 296
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 297
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 298
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 299
 testRunner.When("Enter sleep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 300
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 301
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 302
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2601 check the S3S4 the effect will be keeped(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep2601CheckTheS3S4TheEffectWillBeKeepedT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2601 check the S3S4 the effect will be keeped(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 305
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 306
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 307
 testRunner.When("set lighting profile to default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 308
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 309
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 310
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 311
 testRunner.When("Enter hibernate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 312
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 313
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 314
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2602 check the S3S4 the effect will be keeped(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep2602CheckTheS3S4TheEffectWillBeKeepedT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2602 check the S3S4 the effect will be keeped(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 317
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 318
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 319
 testRunner.When("set lighting profile to default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 320
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 321
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 322
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 323
 testRunner.When("Enter hibernate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 324
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 325
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 326
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep27 check the lighting effect selected off")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep27CheckTheLightingEffectSelectedOff()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep27 check the lighting effect selected off", null, tagsOfScenario, argumentsOfScenario);
#line 329
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 330
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 331
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 332
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 333
 testRunner.Given("select the profile off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 334
 testRunner.Then("lighting profile off is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2801 check the Always On selected(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep2801CheckTheAlwaysOnSelectedT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2801 check the Always On selected(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 337
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 338
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 339
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 340
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 341
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 342
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2802 check the Always On selected(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep2802CheckTheAlwaysOnSelectedT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2802 check the Always On selected(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 345
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 346
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 347
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 348
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 349
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 350
 testRunner.Then("Click \"Ambient Lighting\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2901 check the Fast Blink selected(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep2901CheckTheFastBlinkSelectedT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2901 check the Fast Blink selected(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 353
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 354
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 355
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 356
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 357
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 358
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep2902 check the Fast Blink selected(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep2902CheckTheFastBlinkSelectedT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep2902 check the Fast Blink selected(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 361
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 362
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 363
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 364
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 365
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 366
 testRunner.Then("Click \"Ambient Lighting\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3001 check the Slow Blink selected(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3001CheckTheSlowBlinkSelectedT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3001 check the Slow Blink selected(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 369
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 370
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 371
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 372
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 373
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 374
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"lightingType:Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3002 check the Slow Blink selected(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3002CheckTheSlowBlinkSelectedT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3002 check the Slow Blink selected(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 377
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 378
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 379
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 380
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 381
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 382
 testRunner.Then("Click \"Ambient Lighting\" and Select \"lightingType:Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3101 check the Breath selected(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3101CheckTheBreathSelectedT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3101 check the Breath selected(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 385
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 386
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 387
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 388
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 389
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 390
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3102 check the Breath selected(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3102CheckTheBreathSelectedT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3102 check the Breath selected(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 393
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 394
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 395
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 396
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 397
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 398
 testRunner.Then("Click \"Ambient Lighting\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep32 check brightness bar show for Always On and value is 3")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep32CheckBrightnessBarShowForAlwaysOnAndValueIs3()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep32 check brightness bar show for Always On and value is 3", null, tagsOfScenario, argumentsOfScenario);
#line 401
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 402
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 403
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 404
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 405
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 406
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 407
 testRunner.Then("Brightness bar should be shown and the value should be \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep33 check brightness bar not show for Always On")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep33CheckBrightnessBarNotShowForAlwaysOn()
        {
            string[] tagsOfScenario = new string[] {
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep33 check brightness bar not show for Always On", null, tagsOfScenario, argumentsOfScenario);
#line 410
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 411
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 412
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 413
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 414
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 415
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 416
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3401 check brightness bar not show for Fast Blink(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3401CheckBrightnessBarNotShowForFastBlinkT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3401 check brightness bar not show for Fast Blink(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 419
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 420
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 421
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 422
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 423
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 424
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3402 check brightness bar not show for Fast Blink(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3402CheckBrightnessBarNotShowForFastBlinkT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3402 check brightness bar not show for Fast Blink(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 427
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 428
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 429
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 430
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 431
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 432
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3501 check brightness bar not show for Slow Blink(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3501CheckBrightnessBarNotShowForSlowBlinkT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3501 check brightness bar not show for Slow Blink(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 435
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 436
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 437
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 438
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 439
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 440
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3502 check brightness bar not show for Slow Blink(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3502CheckBrightnessBarNotShowForSlowBlinkT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3502 check brightness bar not show for Slow Blink(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 443
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 444
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 445
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 446
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 447
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 448
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3601 check brightness bar not show for Breath(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3601CheckBrightnessBarNotShowForBreathT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3601 check brightness bar not show for Breath(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 451
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 452
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 453
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 454
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 455
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 456
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3602 check brightness bar not show for Breath(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3602CheckBrightnessBarNotShowForBreathT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3602 check brightness bar not show for Breath(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 459
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 460
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 461
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 462
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 463
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 464
 testRunner.Then("The \"Brightness\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3701 check Speed bar not show for Always On(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3701CheckSpeedBarNotShowForAlwaysOnT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3701 check Speed bar not show for Always On(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 467
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 468
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 469
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 470
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 471
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 472
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3702 check Speed bar not show for Always On(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3702CheckSpeedBarNotShowForAlwaysOnT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3702 check Speed bar not show for Always On(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 475
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 476
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 477
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 478
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 479
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 480
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3801 check Speed bar not show for Fast Blink(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3801CheckSpeedBarNotShowForFastBlinkT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3801 check Speed bar not show for Fast Blink(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 483
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 484
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 485
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 486
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 487
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 488
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3802 check Speed bar not show for Fast Blink(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3802CheckSpeedBarNotShowForFastBlinkT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3802 check Speed bar not show for Fast Blink(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 491
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 492
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 493
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 494
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 495
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 496
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3901 check Speed bar not show for Slow Blink(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep3901CheckSpeedBarNotShowForSlowBlinkT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3901 check Speed bar not show for Slow Blink(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 499
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 500
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 501
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 502
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 503
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 504
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep3902 check Speed bar not show for Slow Blink(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep3902CheckSpeedBarNotShowForSlowBlinkT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep3902 check Speed bar not show for Slow Blink(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 507
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 508
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 509
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 510
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 511
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 512
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4001 check Speed bar not show for Breath(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogSingleColoro")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep4001CheckSpeedBarNotShowForBreathT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogSingleColoro",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4001 check Speed bar not show for Breath(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 515
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 516
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 517
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 518
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 519
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 520
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4002 check Speed bar not show for Breath(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep4002CheckSpeedBarNotShowForBreathT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4002 check Speed bar not show for Breath(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 523
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 524
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 525
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 526
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 527
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 528
 testRunner.Then("The \"Speed\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep41 check color square not show for Always On")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        public virtual void VAN19760_TestStep41CheckColorSquareNotShowForAlwaysOn()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep41 check color square not show for Always On", null, tagsOfScenario, argumentsOfScenario);
#line 531
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 532
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 533
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 534
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 535
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 536
 testRunner.Then("The \"Color\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4201 check color square not show for Fast Blink(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep4201CheckColorSquareNotShowForFastBlinkT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4201 check color square not show for Fast Blink(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 539
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 540
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 541
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 542
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 543
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 544
 testRunner.Then("The \"Color\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4202 check color square not show for Fast Blink(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep4202CheckColorSquareNotShowForFastBlinkT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4202 check color square not show for Fast Blink(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 547
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 548
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 549
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 550
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 551
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 552
 testRunner.Then("The \"Color\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4301 check color square not show for Slow Blink(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep4301CheckColorSquareNotShowForSlowBlinkT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4301 check color square not show for Slow Blink(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 555
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 556
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 557
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 558
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 559
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 560
 testRunner.Then("The \"Color\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4302 check color square not show for Slow Blink(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep4302CheckColorSquareNotShowForSlowBlinkT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4302 check color square not show for Slow Blink(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 563
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 564
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 565
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 566
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 567
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 568
 testRunner.Then("The \"Color\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4401 check color square not show for Breath(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep4401CheckColorSquareNotShowForBreathT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4401 check color square not show for Breath(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 571
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 572
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 573
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 574
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 575
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 576
 testRunner.Then("The \"Color\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4402 check color square not show for Breath(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep4402CheckColorSquareNotShowForBreathT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4402 check color square not show for Breath(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 579
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 580
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 581
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 582
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 583
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 584
 testRunner.Then("The \"Color\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep45 check Set to default button not show for profile off")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep45CheckSetToDefaultButtonNotShowForProfileOff()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep45 check Set to default button not show for profile off", null, tagsOfScenario, argumentsOfScenario);
#line 587
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 588
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 589
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 590
 testRunner.Given("select the profile off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 591
 testRunner.Then("The \"set to default\" is not show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4601 check the proflie 1 settings(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep4601CheckTheProflie1SettingsT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4601 check the proflie 1 settings(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 594
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 595
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 596
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 597
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 598
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 599
 testRunner.Then("Click \"\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 600
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 601
 testRunner.Then("lighting profile 1 is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 602
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 603
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4602 check the proflie 1 settings(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep4602CheckTheProflie1SettingsT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4602 check the proflie 1 settings(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 606
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 607
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 608
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 609
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 610
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 611
 testRunner.Then("Click \"\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 612
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 613
 testRunner.Then("lighting profile 1 is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 614
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 615
 testRunner.Then("Click \"\" and Select \"lightingType:Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4801 check the set to default button show for proflie 1(T550_Ylo" +
            "go)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep4801CheckTheSetToDefaultButtonShowForProflie1T550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4801 check the set to default button show for proflie 1(T550_Ylo" +
                    "go)", null, tagsOfScenario, argumentsOfScenario);
#line 618
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 619
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 620
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 621
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 622
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 623
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 624
 testRunner.Then("The \"set to default\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4802 check the set to default button show for proflie 1(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep4802CheckTheSetToDefaultButtonShowForProflie1T550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4802 check the set to default button show for proflie 1(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 627
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 628
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 629
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 630
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 631
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 632
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 633
 testRunner.Then("The \"set to default\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4901 check the proflie 2 settings(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep4901CheckTheProflie2SettingsT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4901 check the proflie 2 settings(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 636
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 637
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 638
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 639
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 640
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 641
 testRunner.Then("Click \"\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 642
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 643
 testRunner.Then("lighting profile 2 is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 644
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 645
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep4902 check the proflie 2 settings(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep4902CheckTheProflie2SettingsT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep4902 check the proflie 2 settings(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 648
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 649
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 650
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 651
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 652
 testRunner.Given("select the profile 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 653
 testRunner.Then("Click \"\" and Select \"Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 654
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 655
 testRunner.Then("lighting profile 2 is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 656
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 657
 testRunner.Then("Click \"\" and Select \"lightingType:Fast Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep5101 check the set to default button show for proflie 2(T550_Ylo" +
            "go)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep5101CheckTheSetToDefaultButtonShowForProflie2T550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep5101 check the set to default button show for proflie 2(T550_Ylo" +
                    "go)", null, tagsOfScenario, argumentsOfScenario);
#line 660
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 661
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 662
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 663
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 664
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 665
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 666
 testRunner.Then("The \"set to default\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep5102 check the set to default button show for proflie 2(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep5102CheckTheSetToDefaultButtonShowForProflie2T550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep5102 check the set to default button show for proflie 2(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 669
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 670
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 671
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 672
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 673
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 674
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 675
 testRunner.Then("The \"set to default\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep5201 check the proflie 3 settings(T550_Ylogo)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep5201CheckTheProflie3SettingsT550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep5201 check the proflie 3 settings(T550_Ylogo)", null, tagsOfScenario, argumentsOfScenario);
#line 678
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 679
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 680
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 681
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 682
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 683
 testRunner.Then("Click \"\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 684
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 685
 testRunner.Then("lighting profile 3 is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 686
 testRunner.Then("The \"Legion Icon (Front)\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 687
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep5202 check the proflie 3 settings(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep5202CheckTheProflie3SettingsT550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep5202 check the proflie 3 settings(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 690
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 691
 testRunner.Given("Need Compare File is \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 692
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 693
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 694
 testRunner.Given("select the profile 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 695
 testRunner.Then("Click \"\" and Select \"Always On\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 696
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 697
 testRunner.Then("lighting profile 3 is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 698
 testRunner.Then("The \"Ambient Lighting\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 699
 testRunner.Then("Click \"\" and Select \"lightingType:Breath\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep5401 check the set to default button show for proflie 3(T550_Ylo" +
            "go)")]
        [NUnit.Framework.CategoryAttribute("T550_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        public virtual void VAN19760_TestStep5401CheckTheSetToDefaultButtonShowForProflie3T550_Ylogo()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_YlogoSingleColor",
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep5401 check the set to default button show for proflie 3(T550_Ylo" +
                    "go)", null, tagsOfScenario, argumentsOfScenario);
#line 702
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 703
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 704
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 705
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 706
 testRunner.Then("Click \"Legion Icon (Front)\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 707
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 708
 testRunner.Then("The \"set to default\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN19760_TestStep5402 check the set to default button show for proflie 3(T550G)")]
        [NUnit.Framework.CategoryAttribute("T550_BigYSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550AMD_YlogoSingleColor")]
        [NUnit.Framework.CategoryAttribute("T550GSingleColor")]
        public virtual void VAN19760_TestStep5402CheckTheSetToDefaultButtonShowForProflie3T550G()
        {
            string[] tagsOfScenario = new string[] {
                    "T550_BigYSingleColor",
                    "T550AMD_YlogoSingleColor",
                    "T550GSingleColor"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN19760_TestStep5402 check the set to default button show for proflie 3(T550G)", null, tagsOfScenario, argumentsOfScenario);
#line 711
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 712
 testRunner.Given("click the the customize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 713
 testRunner.Given("Lighting page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 714
 testRunner.Given("select the profile 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 715
 testRunner.Then("Click \"Ambient Lighting\" and Select \"Slow Blink\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 716
 testRunner.When("Set to default effect", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 717
 testRunner.Then("The \"set to default\" is show in Lighting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
