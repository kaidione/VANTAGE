// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.4.0.0
//      SpecFlow Generator Version:3.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LenovoVantageTest.Features.UWP.Vantage_NerveCenter
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("VAN21386_GamingNetworkBoostAutoCloseToast")]
    public partial class VAN21386_GamingNetworkBoostAutoCloseToastFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "VAN21386_GamingNetworkBoostAutoCloseToast.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/UWP/Vantage_NerveCenter", "VAN21386_GamingNetworkBoostAutoCloseToast", "\tTest Case： https://jira.tc.lenovo.com/browse/VAN-21386\r\n\tAuthor： Yang Liu", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
#line 6
 testRunner.Given("Machine is Gaming", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When("Stop the IMC service in the task manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.When("Start the IMC service in the task manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.Given("Restart Windows Time Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep01_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep01_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep01_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 12
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 13
 testRunner.Given("Clean Messaging History File", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 14
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 15
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 16
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 17
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep02_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep02_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep02_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 26
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 27
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 28
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 29
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 30
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 31
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 32
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 37
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep03_Network boost toast message should not be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep03_NetworkBoostToastMessageShouldNotBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep03_Network boost toast message should not be shown", null, tagsOfScenario, argumentsOfScenario);
#line 41
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 42
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 43
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 44
 testRunner.Given("Uninstall The Network Boost Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 45
 testRunner.Given("Network Boost Driver Is Not Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 46
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 48
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 50
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep04_Network boost toast message should not be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep04_NetworkBoostToastMessageShouldNotBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep04_Network boost toast message should not be shown", null, tagsOfScenario, argumentsOfScenario);
#line 56
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 57
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 58
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 59
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 60
 testRunner.When("ReLaunch Lenovo Vantage For Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 62
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 63
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.Given("Uninstall The Network Boost Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 65
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 67
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 68
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep05_Network boost promotion toast message should be shown and oth" +
            "ers should not be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep05_NetworkBoostPromotionToastMessageShouldBeShownAndOthersShouldNotBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep05_Network boost promotion toast message should be shown and oth" +
                    "ers should not be shown", null, tagsOfScenario, argumentsOfScenario);
#line 72
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 73
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 74
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 75
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 76
 testRunner.Given("Close Vantage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
 testRunner.Given("Launch Vantage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 78
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 80
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 82
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 83
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 84
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 85
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep06_Network boost promotion toast message should be consistent wi" +
            "th UI spec definition")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep06_NetworkBoostPromotionToastMessageShouldBeConsistentWithUISpecDefinition()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep06_Network boost promotion toast message should be consistent wi" +
                    "th UI spec definition", null, tagsOfScenario, argumentsOfScenario);
#line 89
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 90
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 91
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 92
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 93
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 94
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 95
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 96
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 97
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 99
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 100
 testRunner.Then("Take Screen Shot TestStep06 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep07_Network boost promotion toast message should be disappeared f" +
            "rom desktop and shown in the notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep07_NetworkBoostPromotionToastMessageShouldBeDisappearedFromDesktopAndShownInTheNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep07_Network boost promotion toast message should be disappeared f" +
                    "rom desktop and shown in the notification center", null, tagsOfScenario, argumentsOfScenario);
#line 103
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 104
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 105
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 106
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 107
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 108
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 109
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 111
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 113
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 114
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 115
 testRunner.Then("Take Screen Shot TestStep07 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep08_Network boost promotion toast message should be disappeared f" +
            "rom desktop and shown in the notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep08_NetworkBoostPromotionToastMessageShouldBeDisappearedFromDesktopAndShownInTheNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep08_Network boost promotion toast message should be disappeared f" +
                    "rom desktop and shown in the notification center", null, tagsOfScenario, argumentsOfScenario);
#line 118
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 119
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 120
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 121
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 122
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 123
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 124
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 126
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 127
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 128
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 129
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.Then("Take Screen Shot TestStep08 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep09_Network boost promotion toast message should be disappeared a" +
            "nd should not be shown in the notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep09_NetworkBoostPromotionToastMessageShouldBeDisappearedAndShouldNotBeShownInTheNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep09_Network boost promotion toast message should be disappeared a" +
                    "nd should not be shown in the notification center", null, tagsOfScenario, argumentsOfScenario);
#line 133
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 134
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 135
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 136
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 137
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 138
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 139
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 140
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 141
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 142
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 143
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 144
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 145
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 146
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep10_Auto Close promotion toast message should be shown and Auto C" +
            "lose effect toast message should not be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep10_AutoClosePromotionToastMessageShouldBeShownAndAutoCloseEffectToastMessageShouldNotBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep10_Auto Close promotion toast message should be shown and Auto C" +
                    "lose effect toast message should not be shown", null, tagsOfScenario, argumentsOfScenario);
#line 149
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 150
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 151
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 152
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 153
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 154
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 155
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 156
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 157
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 158
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 159
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 160
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 161
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 162
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 163
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 165
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 166
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 167
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 168
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 169
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 170
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep11_Auto Close promotion toast message should be consistent with " +
            "UI spec definition")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep11_AutoClosePromotionToastMessageShouldBeConsistentWithUISpecDefinition()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep11_Auto Close promotion toast message should be consistent with " +
                    "UI spec definition", null, tagsOfScenario, argumentsOfScenario);
#line 173
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 174
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 175
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 176
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 177
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 178
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 179
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 180
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 181
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 182
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 183
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 184
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 185
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 186
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 187
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 188
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 189
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 190
 testRunner.Then("Take Screen Shot TestStep11 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 191
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 192
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep12_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep12_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep12_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 195
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 196
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 197
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 198
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 199
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 200
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 201
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 202
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 203
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 204
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 205
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 206
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 207
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 208
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 209
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 210
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 211
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 212
 testRunner.Given("Adjust The System Time To 2 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 213
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 214
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 215
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 216
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 217
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 218
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 219
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 220
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 221
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 222
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep13_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep13_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep13_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 225
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 226
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 227
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 228
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 229
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 230
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 231
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 232
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 233
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 234
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 235
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 236
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 237
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 238
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 239
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 240
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 241
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 242
 testRunner.Given("Adjust The System Time To 4 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 243
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 244
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 245
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 246
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 247
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 249
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 250
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 251
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 252
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep14_Network boost promotion toast message should be shown for the" +
            " second time")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep14_NetworkBoostPromotionToastMessageShouldBeShownForTheSecondTime()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep14_Network boost promotion toast message should be shown for the" +
                    " second time", null, tagsOfScenario, argumentsOfScenario);
#line 255
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 256
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 257
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 258
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 259
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 260
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 261
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 262
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 263
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 264
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 265
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 266
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 267
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 268
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 269
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 270
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 271
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 272
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 273
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 274
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 275
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 276
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 277
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 278
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 279
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 280
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 281
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 282
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep15_Auto Close promotion toast message should be shown for the se" +
            "cond time")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep15_AutoClosePromotionToastMessageShouldBeShownForTheSecondTime()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep15_Auto Close promotion toast message should be shown for the se" +
                    "cond time", null, tagsOfScenario, argumentsOfScenario);
#line 285
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 286
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 287
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 288
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 289
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 290
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 291
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 2 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 292
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 1 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 293
 testRunner.Given("Adjust The System Time To 8 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 294
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 295
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 296
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 297
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 298
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 299
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 300
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 301
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 302
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep16_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep16_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep16_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 305
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 306
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 307
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 308
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 309
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 310
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 311
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 2 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 312
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 313
 testRunner.Given("Adjust The System Time To 10 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 314
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 315
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 316
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 317
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 318
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 319
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 320
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 321
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 322
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep17_Network boost promotion toast message should be shown for the" +
            " third time")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep17_NetworkBoostPromotionToastMessageShouldBeShownForTheThirdTime()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep17_Network boost promotion toast message should be shown for the" +
                    " third time", null, tagsOfScenario, argumentsOfScenario);
#line 325
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 326
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 327
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 328
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 329
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 330
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 331
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 2 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 332
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 333
 testRunner.Given("Adjust The System Time To 14 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 334
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 335
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 336
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 337
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 338
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 339
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 340
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 341
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 342
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep18_Auto Close Promotion toast message should be shown for the th" +
            "ird time")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep18_AutoClosePromotionToastMessageShouldBeShownForTheThirdTime()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep18_Auto Close Promotion toast message should be shown for the th" +
                    "ird time", null, tagsOfScenario, argumentsOfScenario);
#line 345
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 346
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 347
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 348
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 349
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 350
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 351
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 3 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 352
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 353
 testRunner.Given("Adjust The System Time To 15 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 354
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 355
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 356
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 357
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 358
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 359
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 360
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 361
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 362
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep19_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep19_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep19_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 365
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 366
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 367
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 368
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 369
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 370
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 371
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 3 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 372
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 373
 testRunner.Given("Adjust The System Time To 18 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 374
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 375
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 376
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 377
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 378
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 379
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 380
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 381
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 382
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep20_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep20_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep20_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 385
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 386
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 387
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 388
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 389
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 390
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 391
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 3 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 392
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 393
 testRunner.Given("Adjust The System Time To 21 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 394
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 395
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 396
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 397
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 398
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 399
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 400
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 401
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 402
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep21_Network boost page should be open and toggle status should no" +
            "t be changed")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep21_NetworkBoostPageShouldBeOpenAndToggleStatusShouldNotBeChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep21_Network boost page should be open and toggle status should no" +
                    "t be changed", null, tagsOfScenario, argumentsOfScenario);
#line 405
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 406
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 407
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 408
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 409
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 410
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 411
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 412
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 413
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 414
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 415
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 416
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 417
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 418
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 419
 testRunner.Then("jump to network boost subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 420
 testRunner.Then("The toggle display off status in network boost subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep22_Auto Close page should be open and toggle status should not b" +
            "e changed")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep22_AutoClosePageShouldBeOpenAndToggleStatusShouldNotBeChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep22_Auto Close page should be open and toggle status should not b" +
                    "e changed", null, tagsOfScenario, argumentsOfScenario);
#line 423
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 424
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 425
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 426
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 427
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 428
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 429
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 430
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 431
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 432
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 433
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 434
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 435
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 436
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 437
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 438
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 439
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 440
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 441
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 442
 testRunner.Then("The auto close will be shown within subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 443
 testRunner.Then("The auto close toggle status is on or off within subpage off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 444
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep23_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep23_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep23_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 447
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 448
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 449
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 450
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 451
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 452
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 453
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 454
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 455
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 456
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 457
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 458
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 459
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 460
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 461
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 462
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 463
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 464
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 465
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 466
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 467
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 468
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 469
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 470
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 471
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 472
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 473
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 474
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep24_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep24_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep24_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 477
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 478
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 479
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 480
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 481
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 482
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 483
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 484
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 485
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 486
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 487
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 488
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 489
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 490
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 491
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 492
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 493
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 494
 testRunner.Given("Adjust The System Time To 7 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 495
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 496
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 497
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 498
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 499
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 500
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 501
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 502
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 503
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 504
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep25_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep25_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep25_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 507
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 508
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 509
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 510
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 511
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 512
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 513
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 514
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 515
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 516
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 517
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 518
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 519
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 520
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 521
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 522
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 523
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 524
 testRunner.Given("Adjust The System Time To 13 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 525
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 526
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 527
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 528
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 529
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 530
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 531
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 532
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 533
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 534
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep26_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep26_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep26_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 537
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 538
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 539
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 540
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 541
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 542
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 543
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 544
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 545
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 546
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 547
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 548
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 549
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 550
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 551
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 552
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 553
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 554
 testRunner.Given("Adjust The System Time To 14 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 555
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 556
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 557
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 558
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 559
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 560
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 561
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 562
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 563
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 564
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep27_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep27_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep27_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 567
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 568
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 569
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 570
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 571
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 572
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 573
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 574
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 575
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 576
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 577
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 578
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 579
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 580
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 581
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 582
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 583
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 584
 testRunner.Given("Adjust The System Time To 20 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 585
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 586
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 587
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 588
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 589
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 590
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 591
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 592
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 593
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 594
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep28_Network boost page should not be opened and toggle status sho" +
            "uld be changed to ON, network boost promotion toast message should be disappeare" +
            "d")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep28_NetworkBoostPageShouldNotBeOpenedAndToggleStatusShouldBeChangedToONNetworkBoostPromotionToastMessageShouldBeDisappeared()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep28_Network boost page should not be opened and toggle status sho" +
                    "uld be changed to ON, network boost promotion toast message should be disappeare" +
                    "d", null, tagsOfScenario, argumentsOfScenario);
#line 597
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 598
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 599
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 600
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 601
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 602
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 603
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 604
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 605
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 606
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 607
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 608
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 609
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 610
 testRunner.When("Click network boost gear icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 611
 testRunner.When("Click back button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 612
 testRunner.Then("jump to homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 613
 testRunner.Then("Network boost toggle status is on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep29_Auto Close page should not be opened and toggle status should" +
            " be changed to ON, auto Close promotion toast message should be disappeared")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep29_AutoClosePageShouldNotBeOpenedAndToggleStatusShouldBeChangedToONAutoClosePromotionToastMessageShouldBeDisappeared()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep29_Auto Close page should not be opened and toggle status should" +
                    " be changed to ON, auto Close promotion toast message should be disappeared", null, tagsOfScenario, argumentsOfScenario);
#line 616
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 617
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 618
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 619
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 620
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 621
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 622
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 623
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 624
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 625
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 626
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 627
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 628
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 629
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 630
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 631
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 632
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 633
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 634
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 635
 testRunner.When("Click network boost gear icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 636
 testRunner.When("Click back button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 637
 testRunner.Then("The auto close will be shown within legion home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 638
 testRunner.Then("The auto close toggle status is on or off within home page ON", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 639
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep30_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep30_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep30_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 642
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 643
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 644
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 645
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 646
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 647
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 648
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 649
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 650
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 651
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 652
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 653
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 654
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 655
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 656
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 657
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 658
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 659
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 660
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 661
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 662
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 663
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 664
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 665
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 666
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep31_Auto close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep31_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep31_Auto close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 669
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 670
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 671
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 672
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 673
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 674
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 675
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 676
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 677
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 678
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 679
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 680
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 681
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 682
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 683
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 684
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 685
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 686
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 687
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 688
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 689
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 690
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 691
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 692
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 693
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 694
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 695
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 696
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 697
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 698
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 699
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep32_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep32_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep32_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 702
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 703
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 704
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 705
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 706
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 707
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 708
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 709
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 710
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 711
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 712
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 713
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 714
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 715
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 716
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 717
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 718
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 719
 testRunner.Given("Adjust The System Time To 13 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 720
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 721
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 722
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 723
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 724
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 725
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 726
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep33_Auto close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep33_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep33_Auto close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 729
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 730
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 731
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 732
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 733
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 734
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 735
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 736
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 737
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 738
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 739
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 740
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 741
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 742
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 743
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 744
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 745
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 746
 testRunner.Given("Adjust The System Time To 13 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 747
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 748
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 749
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 750
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 751
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 752
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 753
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 754
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 755
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 756
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 757
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 758
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 759
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep34_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep34_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep34_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 762
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 763
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 764
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 765
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 766
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 767
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 768
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 769
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 770
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 771
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 772
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 773
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 774
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 775
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 776
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 777
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 778
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 779
 testRunner.Given("Adjust The System Time To 20 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 780
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 781
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 782
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 783
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 784
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 785
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 786
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep35_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep35_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep35_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 789
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 790
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 791
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 792
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 793
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 794
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 795
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 796
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 797
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 798
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 799
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 800
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep36_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep36_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep36_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 803
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 804
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 805
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 806
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 807
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 808
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 809
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 810
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 811
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 812
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 813
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 814
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 815
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 816
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep37_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep37_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep37_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 819
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 820
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 821
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 822
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 823
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 824
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 825
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 826
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 827
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 828
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 829
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 830
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 831
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 832
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 833
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep38_Network boost effect toast message should be consistent with " +
            "UI spec definition")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep38_NetworkBoostEffectToastMessageShouldBeConsistentWithUISpecDefinition()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep38_Network boost effect toast message should be consistent with " +
                    "UI spec definition", null, tagsOfScenario, argumentsOfScenario);
#line 836
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 837
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 838
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 839
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 840
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 841
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 842
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 843
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 844
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 845
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 846
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 847
 testRunner.Then("Take Screen Shot TestStep38 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 848
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep39_Network boost effect toast message should be disappeared from" +
            " desktop and shown in the notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep39_NetworkBoostEffectToastMessageShouldBeDisappearedFromDesktopAndShownInTheNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep39_Network boost effect toast message should be disappeared from" +
                    " desktop and shown in the notification center", null, tagsOfScenario, argumentsOfScenario);
#line 851
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 852
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 853
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 854
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 855
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 856
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 857
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 858
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 859
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 860
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 861
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 862
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 863
 testRunner.Then("Take Screen Shot TestStep39 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 864
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep40_Network boost effect toast message should be disappeared from" +
            " desktop and shown in the notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep40_NetworkBoostEffectToastMessageShouldBeDisappearedFromDesktopAndShownInTheNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep40_Network boost effect toast message should be disappeared from" +
                    " desktop and shown in the notification center", null, tagsOfScenario, argumentsOfScenario);
#line 867
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 868
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 869
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 870
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 871
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 872
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 873
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 874
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 875
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 876
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 877
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 878
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 879
 testRunner.Then("Take Screen Shot TestStep40 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep41_Auto close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep41_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep41_Auto close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 882
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 883
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 884
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 885
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 886
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 887
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 888
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 889
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 890
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 891
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 892
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 893
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 894
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 895
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 896
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 897
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 898
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 899
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 900
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 901
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 902
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 903
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 904
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep42_Auto close effect toast message should be consistent with UI " +
            "spec definition")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep42_AutoCloseEffectToastMessageShouldBeConsistentWithUISpecDefinition()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep42_Auto close effect toast message should be consistent with UI " +
                    "spec definition", null, tagsOfScenario, argumentsOfScenario);
#line 907
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 908
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 909
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 910
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 911
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 912
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 913
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 914
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 915
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 916
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 917
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 918
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 919
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 920
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 921
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 922
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 923
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 924
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 925
 testRunner.Then("Take Screen Shot TestStep42 in 21386 under GamingScreenShotResult", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 926
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 927
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep43_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep43_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep43_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 930
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 931
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 932
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 933
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 934
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 935
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 936
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 937
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 938
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 939
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 940
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 941
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 942
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 943
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 944
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 945
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 946
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 947
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 948
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 949
 testRunner.Given("Adjust The System Time To 2 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 950
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 951
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 952
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 953
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 954
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 955
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 956
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 957
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 958
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 959
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep44_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep44_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep44_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 962
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 963
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 964
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 965
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 966
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 967
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 968
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 969
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 970
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 971
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 972
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 973
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 974
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 975
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 976
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 977
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 978
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 979
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 980
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 981
 testRunner.Given("Adjust The System Time To 4 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 982
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 983
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 984
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 985
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 986
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 987
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 988
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 989
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 990
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 991
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep45_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep45_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep45_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 994
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 995
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 996
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 997
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 998
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 999
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1000
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1001
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1002
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1003
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1004
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1005
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1006
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1007
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1008
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1009
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1010
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1011
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1012
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1013
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1014
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1015
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1016
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1017
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1018
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1019
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1020
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1021
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1022
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1023
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep46_Auto close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep46_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep46_Auto close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1026
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1027
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1028
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1029
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1030
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1031
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1032
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1033
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 1 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1034
 testRunner.Given("Adjust The System Time To 8 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1035
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1036
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1037
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1038
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1039
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1040
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1041
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1042
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1043
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep47_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep47_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep47_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1046
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1047
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1048
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1049
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1050
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1051
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1052
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1053
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 2 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1054
 testRunner.Given("Adjust The System Time To 10 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1055
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1056
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1057
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1058
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1059
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1060
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1061
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1062
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1063
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep48_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep48_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep48_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1066
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1067
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1068
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1069
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1070
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1071
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1072
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1073
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 2 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1074
 testRunner.Given("Adjust The System Time To 14 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1075
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1076
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1077
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1078
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1079
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1080
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1081
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1082
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1083
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep49_Auto close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep49_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep49_Auto close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1086
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1087
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1088
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1089
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1090
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1091
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1092
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1093
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 2 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1094
 testRunner.Given("Adjust The System Time To 15 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1095
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1096
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1097
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1098
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1099
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1100
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1101
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1102
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1103
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep50_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep50_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep50_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1106
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1107
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1108
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1109
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1110
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1111
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1112
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1113
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 3 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1114
 testRunner.Given("Adjust The System Time To 18 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1115
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1116
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1117
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1118
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1119
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1120
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1121
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1122
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1123
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep51_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep51_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep51_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1126
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1127
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1128
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1129
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1130
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1131
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1132
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1133
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 3 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1134
 testRunner.Given("Adjust The System Time To 21 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1135
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1136
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1137
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1138
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1139
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1140
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1141
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1142
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1143
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep52_Network boost page should be open and toggle status should no" +
            "t be changed")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep52_NetworkBoostPageShouldBeOpenAndToggleStatusShouldNotBeChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep52_Network boost page should be open and toggle status should no" +
                    "t be changed", null, tagsOfScenario, argumentsOfScenario);
#line 1146
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1147
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1148
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1149
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1150
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1151
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1152
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1153
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1154
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1155
 testRunner.When("Click The Learn More Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1156
 testRunner.Then("jump to network boost subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1157
 testRunner.Then("The toggle display on status in network boost subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1158
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1159
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1160
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep53_Auto Close page should be open and toggle status should not b" +
            "e changed")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep53_AutoClosePageShouldBeOpenAndToggleStatusShouldNotBeChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep53_Auto Close page should be open and toggle status should not b" +
                    "e changed", null, tagsOfScenario, argumentsOfScenario);
#line 1163
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1164
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1165
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1166
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1167
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1168
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1169
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1170
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1171
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1172
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1173
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1174
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1175
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1176
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1177
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1178
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1179
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1180
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1181
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1182
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1183
 testRunner.Then("The auto close will be shown within subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1184
 testRunner.Then("The auto close toggle status is on or off within subpage on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1185
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep54_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep54_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep54_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1188
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1189
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1190
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1191
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1192
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1193
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1194
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1195
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1196
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1197
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1198
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1199
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1200
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1201
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1202
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1203
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1204
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1205
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1206
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1207
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1208
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1209
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1210
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1211
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1212
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1213
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1214
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1215
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep55_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep55_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep55_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1218
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1219
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1220
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1221
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1222
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1223
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1224
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1225
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1226
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1227
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1228
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1229
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1230
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1231
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1232
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1233
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1234
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1235
 testRunner.Given("Adjust The System Time To 7 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1236
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1237
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1238
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1239
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1240
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1241
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1242
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1243
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1244
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1245
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep56_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep56_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep56_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1248
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1249
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1250
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1251
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1252
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1253
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1254
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1255
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1256
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1257
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1258
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1259
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1260
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1261
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1262
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1263
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1264
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1265
 testRunner.Given("Adjust The System Time To 13 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1266
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1267
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1268
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1269
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1270
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1271
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1272
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1273
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1274
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1275
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep57_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep57_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep57_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1278
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1279
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1280
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1281
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1282
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1283
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1284
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1285
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1286
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1287
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1288
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1289
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1290
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1291
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1292
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1293
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1294
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1295
 testRunner.Given("Adjust The System Time To 14 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1296
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1297
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1298
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1299
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1300
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1301
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1302
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1303
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1304
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1305
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep58_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep58_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep58_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1308
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1309
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1310
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1311
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1312
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1313
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1314
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1315
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1316
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1317
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1318
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1319
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1320
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1321
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1322
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1323
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1324
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1325
 testRunner.Given("Adjust The System Time To 21 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1326
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1327
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1328
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1329
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1330
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1331
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1332
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1333
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1334
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1335
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep59_Network boost page should not be open and toggle status shoul" +
            "d not be changed")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep59_NetworkBoostPageShouldNotBeOpenAndToggleStatusShouldNotBeChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep59_Network boost page should not be open and toggle status shoul" +
                    "d not be changed", null, tagsOfScenario, argumentsOfScenario);
#line 1338
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1339
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1340
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1341
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1342
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1343
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1344
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1345
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1346
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1347
 testRunner.When("Click The Close Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1348
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1349
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1350
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1351
 testRunner.Then("Network boost toggle status is on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep60_Auto Close page should not be open and toggle status should n" +
            "ot be changed")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep60_AutoClosePageShouldNotBeOpenAndToggleStatusShouldNotBeChanged()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep60_Auto Close page should not be open and toggle status should n" +
                    "ot be changed", null, tagsOfScenario, argumentsOfScenario);
#line 1354
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1355
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1356
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1357
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1358
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1359
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1360
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1361
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1362
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1363
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1364
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1365
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1366
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1367
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1368
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1369
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1370
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1371
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1372
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1373
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1374
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep61_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep61_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep61_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1377
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1378
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1379
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1380
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1381
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1382
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1383
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1384
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1385
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1386
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1387
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1388
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1389
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1390
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1391
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1392
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1393
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1394
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1395
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1396
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1397
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1398
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1399
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1400
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1401
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1402
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1403
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1404
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep62_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep62_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep62_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1407
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1408
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1409
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1410
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1411
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1412
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1413
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1414
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1415
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1416
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1417
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1418
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1419
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1420
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1421
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1422
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1423
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1424
 testRunner.Given("Adjust The System Time To 7 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1425
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1426
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1427
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1428
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1429
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1430
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1431
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1432
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1433
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1434
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep63_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep63_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep63_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1437
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1438
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1439
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1440
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1441
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1442
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1443
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1444
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1445
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1446
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1447
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1448
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1449
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1450
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1451
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1452
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1453
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1454
 testRunner.Given("Adjust The System Time To 13 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1455
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1456
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1457
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1458
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1459
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1460
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1461
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1462
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1463
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1464
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep64_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep64_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep64_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1467
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1468
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1469
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1470
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1471
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1472
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1473
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1474
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1475
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1476
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1477
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1478
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1479
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1480
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1481
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1482
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1483
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1484
 testRunner.Given("Adjust The System Time To 14 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1485
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1486
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1487
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1488
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1489
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1490
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1491
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1492
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1493
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1494
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep65_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep65_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep65_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1497
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1498
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1499
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1500
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1501
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1502
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1503
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1504
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1505
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1506
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1507
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1508
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1509
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1510
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1511
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1512
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1513
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1514
 testRunner.Given("Adjust The System Time To 20 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1515
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1516
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1517
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1518
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1519
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1520
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1521
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1522
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1523
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1524
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep66_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep66_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep66_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1527
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1528
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1529
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1530
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1531
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1532
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1533
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1534
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1535
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1536
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1537
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1538
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep67_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep67_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep67_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1541
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1542
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1543
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1544
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1545
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1546
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1547
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1548
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1549
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1550
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1551
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1552
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1553
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1554
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep68_Auto Close promotion toast message should be shown and others" +
            " should not be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep68_AutoClosePromotionToastMessageShouldBeShownAndOthersShouldNotBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep68_Auto Close promotion toast message should be shown and others" +
                    " should not be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1557
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1558
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1559
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1560
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1561
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1562
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1563
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1564
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1565
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1566
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1567
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1568
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1569
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1570
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1571
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep69_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep69_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep69_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1574
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1575
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1576
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1577
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1578
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1579
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1580
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1581
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1582
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1583
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1584
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1585
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1586
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1587
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1588
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1589
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1590
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1591
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1592
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1593
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1594
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1595
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep70_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep70_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep70_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1598
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1599
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1600
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1601
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1602
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1603
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1604
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1605
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1606
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1607
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1608
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1609
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1610
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1611
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1612
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1613
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1614
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1615
 testRunner.Given("Adjust The System Time To 2 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1616
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1617
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1618
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1619
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1620
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1621
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1622
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1623
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1624
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1625
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1626
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep71_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep71_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep71_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1629
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1630
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1631
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1632
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1633
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1634
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1635
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1636
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1637
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1638
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1639
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1640
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1641
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1642
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1643
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1644
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1645
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1646
 testRunner.Given("Adjust The System Time To 4 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1647
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1648
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1649
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1650
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1651
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1652
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1653
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1654
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1655
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1656
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1657
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep72_Auto Close promotion toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep72_AutoClosePromotionToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep72_Auto Close promotion toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1660
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1661
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1662
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1663
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1664
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1665
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1666
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1667
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1668
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1669
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1670
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1671
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1672
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1673
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1674
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1675
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1676
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1677
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1678
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1679
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1680
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1681
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1682
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1683
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1684
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1685
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1686
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1687
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1688
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep73_Network boost effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep73_NetworkBoostEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep73_Network boost effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1691
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1692
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1693
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1694
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1695
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1696
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1697
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1698
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 1 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1699
 testRunner.Given("Adjust The System Time To 8 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1700
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1701
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1702
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1703
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1704
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1705
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1706
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1707
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1708
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep74_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep74_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep74_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1711
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1712
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1713
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1714
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1715
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1716
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1717
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1718
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1719
 testRunner.Given("Adjust The System Time To 10 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1720
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1721
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1722
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1723
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1724
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1725
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1726
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1727
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1728
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep75_Auto Close promotion toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep75_AutoClosePromotionToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep75_Auto Close promotion toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1731
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1732
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1733
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1734
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1735
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1736
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1737
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1738
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1739
 testRunner.Given("Adjust The System Time To 14 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1740
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1741
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1742
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1743
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1744
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1745
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1746
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1747
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1748
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep76_Network Boost effect toast message should be shown for the se" +
            "cond time")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep76_NetworkBoostEffectToastMessageShouldBeShownForTheSecondTime()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep76_Network Boost effect toast message should be shown for the se" +
                    "cond time", null, tagsOfScenario, argumentsOfScenario);
#line 1751
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1752
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1753
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1754
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1755
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1756
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1757
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1758
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 2 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1759
 testRunner.Given("Adjust The System Time To 15 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1760
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1761
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1762
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1763
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1764
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1765
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1766
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1767
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1768
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep77_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep77_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep77_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1771
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1772
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1773
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1774
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1775
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1776
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1777
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1778
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1779
 testRunner.Given("Adjust The System Time To 18 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1780
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1781
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1782
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1783
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1784
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1785
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1786
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1787
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1788
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep78_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep78_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep78_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1791
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1792
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1793
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1794
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1795
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1796
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1797
 testRunner.Given("Auto Close Promotion Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1798
 testRunner.Given("Network Boost Effect Toast Message Was Shown For The 3 Time And Click The Ignore " +
                        "Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1799
 testRunner.Given("Adjust The System Time To 21 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1800
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1801
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1802
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1803
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1804
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1805
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1806
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1807
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1808
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep79_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep79_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep79_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1811
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1812
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1813
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1814
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1815
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1816
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1817
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1818
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1819
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1820
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1821
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1822
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep80_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep80_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep80_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1825
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1826
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1827
 testRunner.Given("Clean Auto Close And Network Boost Registry Key Under Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1828
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1829
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1830
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1831
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1832
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1833
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1834
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1835
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1836
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1837
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1838
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep81_Network boost promotion toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep81_NetworkBoostPromotionToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep81_Network boost promotion toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1841
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1842
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1843
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1844
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1845
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1846
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1847
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1848
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1849
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1850
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1851
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1852
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1853
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1854
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1855
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep82_Auto Close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep82_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep82_Auto Close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1858
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1859
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1860
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1861
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1862
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1863
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1864
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1865
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1866
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1867
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1868
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1869
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1870
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1871
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1872
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1873
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1874
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1875
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1876
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1877
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1878
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1879
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep83_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep83_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep83_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1882
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1883
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1884
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1885
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1886
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1887
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1888
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1889
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1890
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1891
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1892
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1893
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1894
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1895
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1896
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1897
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1898
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1899
 testRunner.Given("Adjust The System Time To 2 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1900
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1901
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1902
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1903
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1904
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1905
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1906
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1907
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1908
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1909
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1910
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep84_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep84_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep84_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1913
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1914
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1915
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1916
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1917
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1918
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1919
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1920
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1921
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1922
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1923
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1924
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1925
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1926
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1927
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1928
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1929
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1930
 testRunner.Given("Adjust The System Time To 4 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1931
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1932
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1933
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1934
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1935
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1936
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1937
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1938
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1939
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1940
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1941
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep85_Network boost promotion toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep85_NetworkBoostPromotionToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep85_Network boost promotion toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1944
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1945
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1946
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1947
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1948
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1949
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1950
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1951
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1952
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1953
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1954
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1955
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1956
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1957
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1958
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1959
 testRunner.When("Click The Move this notification to action center Button New notification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1960
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1961
 testRunner.Given("Adjust The System Time To 6 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1962
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1963
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1964
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1965
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1966
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1967
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1968
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1969
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1970
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1971
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1972
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep86_Auto Close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep86_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep86_Auto Close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1975
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1976
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1977
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1978
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1979
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1980
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1981
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 2 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1982
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 1 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1983
 testRunner.Given("Adjust The System Time To 8 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1984
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1985
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1986
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1987
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1988
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1989
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1990
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 1991
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1992
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep87_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep87_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep87_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 1995
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 1996
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1997
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 1998
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 1999
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2000
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2001
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 2 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2002
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 2 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2003
 testRunner.Given("Adjust The System Time To 10 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2004
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2005
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2006
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2007
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2008
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2009
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2010
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2011
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2012
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep88_Network boost promotion toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep88_NetworkBoostPromotionToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep88_Network boost promotion toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 2015
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2016
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2017
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2018
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2019
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2020
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2021
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 2 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2022
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 2 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2023
 testRunner.Given("Adjust The System Time To 14 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2024
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2025
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2026
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2027
 testRunner.Then("Network Boost Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2028
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2029
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2030
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2031
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2032
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep89_Auto Close effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep89_AutoCloseEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep89_Auto Close effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 2035
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2036
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2037
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2038
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2039
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2040
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2041
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 3 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2042
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 2 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2043
 testRunner.Given("Adjust The System Time To 15 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2044
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2045
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2046
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2047
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2048
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2049
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2050
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2051
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2052
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep90_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep90_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep90_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 2055
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2056
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2057
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2058
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2059
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2060
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2061
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 3 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2062
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 3 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2063
 testRunner.Given("Adjust The System Time To 18 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2064
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2065
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2066
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2067
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2068
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2069
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2070
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2071
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2072
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep91_No Gaming promotion and effect toast message should be shown")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep91_NoGamingPromotionAndEffectToastMessageShouldBeShown()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep91_No Gaming promotion and effect toast message should be shown", null, tagsOfScenario, argumentsOfScenario);
#line 2075
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2076
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2077
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2078
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2079
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2080
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2081
 testRunner.Given("Network Boost Promotion Toast Message Was Shown For The 3 Time And Click The Igno" +
                        "re Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2082
 testRunner.Given("Auto Close Effect Toast Message Was Shown For The 3 Time And Click The Ignore But" +
                        "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2083
 testRunner.Given("Adjust The System Time To 21 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2084
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2085
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2086
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2087
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2088
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2089
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2090
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2091
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2092
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep96_Network boost promotion toast message should be disappeared f" +
            "rom notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep96_NetworkBoostPromotionToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep96_Network boost promotion toast message should be disappeared f" +
                    "rom notification center", null, tagsOfScenario, argumentsOfScenario);
#line 2095
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2096
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2097
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2098
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2099
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2100
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2101
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2102
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2103
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2104
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2105
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2106
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2107
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep97_Network boost page should be opened and network boost promoti" +
            "on toast message should be disappeared from notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep97_NetworkBoostPageShouldBeOpenedAndNetworkBoostPromotionToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep97_Network boost page should be opened and network boost promoti" +
                    "on toast message should be disappeared from notification center", null, tagsOfScenario, argumentsOfScenario);
#line 2110
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2111
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2112
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2113
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2114
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2115
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2116
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2117
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2118
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2119
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2120
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2121
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2122
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2123
 testRunner.Then("jump to network boost subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep98_Network boost toggle status should be On")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep98_NetworkBoostToggleStatusShouldBeOn()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep98_Network boost toggle status should be On", null, tagsOfScenario, argumentsOfScenario);
#line 2126
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2127
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2128
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2129
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2130
 testRunner.When("Turn off network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2131
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2132
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2133
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2134
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2135
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2136
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2137
 testRunner.Then("Network Boost Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2138
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2139
 testRunner.When("Click network boost gear icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2140
 testRunner.When("Click back button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2141
 testRunner.Then("Network boost toggle status is on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep99_Auto Close promotion toast message should be disappeared from" +
            " notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep99_AutoClosePromotionToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep99_Auto Close promotion toast message should be disappeared from" +
                    " notification center", null, tagsOfScenario, argumentsOfScenario);
#line 2144
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2145
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2146
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2147
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2148
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2149
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2150
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2151
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2152
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2153
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2154
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2155
 testRunner.When("Click The Ignore Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2156
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2157
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2158
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep100_Auto Close page should be opened and auto Close promotion to" +
            "ast message should be disappeared from notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep100_AutoClosePageShouldBeOpenedAndAutoClosePromotionToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep100_Auto Close page should be opened and auto Close promotion to" +
                    "ast message should be disappeared from notification center", null, tagsOfScenario, argumentsOfScenario);
#line 2161
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2162
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2163
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2164
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2165
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2166
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2167
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2168
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2169
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2170
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2171
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2172
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2173
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2174
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2175
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2176
 testRunner.Then("The auto close will be shown within subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep101_Auto Close toggle status should be On")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep101_AutoCloseToggleStatusShouldBeOn()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep101_Auto Close toggle status should be On", null, tagsOfScenario, argumentsOfScenario);
#line 2179
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2180
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2181
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2182
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2183
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2184
 testRunner.When("The user turn off auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2185
 testRunner.Then("The auto close toggle status is on or off within home page off", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2186
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2187
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2188
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2189
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2190
 testRunner.Then("Auto Close Promotion Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2191
 testRunner.When("Click The Turn on Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2192
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2193
 testRunner.Then("Auto Close Promotion Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2194
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2195
 testRunner.When("Click network boost gear icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2196
 testRunner.When("Click back button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2197
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep102_Network boost effect toast message should be disappeared fro" +
            "m notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep102_NetworkBoostEffectToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep102_Network boost effect toast message should be disappeared fro" +
                    "m notification center", null, tagsOfScenario, argumentsOfScenario);
#line 2200
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2201
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2202
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2203
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2204
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2205
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2206
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2207
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2208
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2209
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2210
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2211
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2212
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2213
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2214
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep103_Network boost page should be opened and network boost effect" +
            " toast message should be disappeared from notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep103_NetworkBoostPageShouldBeOpenedAndNetworkBoostEffectToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep103_Network boost page should be opened and network boost effect" +
                    " toast message should be disappeared from notification center", null, tagsOfScenario, argumentsOfScenario);
#line 2217
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2218
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2219
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2220
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2221
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2222
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2223
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2224
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2225
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2226
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2227
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2228
 testRunner.Then("Network Boost Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2229
 testRunner.When("Click The Learn more Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2230
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2231
 testRunner.Then("Network Boost Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2232
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2233
 testRunner.Then("jump to network boost subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep104_Auto Close effect toast message should be disappeared from n" +
            "otification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep104_AutoCloseEffectToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep104_Auto Close effect toast message should be disappeared from n" +
                    "otification center", null, tagsOfScenario, argumentsOfScenario);
#line 2236
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2237
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2238
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2239
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2240
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2241
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2242
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2243
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2244
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2245
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2246
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2247
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2248
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2249
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2250
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2251
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2252
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2253
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2254
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2255
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2256
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2257
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2258
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VAN21386_TestStep105_Auto Close page should be opened and Auto Close effect toast" +
            " message should be disappeared from notification center")]
        [NUnit.Framework.CategoryAttribute("GamingNetworkBoostAutoCloseToast")]
        public virtual void VAN21386_TestStep105_AutoClosePageShouldBeOpenedAndAutoCloseEffectToastMessageShouldBeDisappearedFromNotificationCenter()
        {
            string[] tagsOfScenario = new string[] {
                    "GamingNetworkBoostAutoCloseToast"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VAN21386_TestStep105_Auto Close page should be opened and Auto Close effect toast" +
                    " message should be disappeared from notification center", null, tagsOfScenario, argumentsOfScenario);
#line 2261
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 2262
 testRunner.Given("Clean toast history", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2263
 testRunner.Given("Clean Registry Key Toast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2264
 testRunner.Given("Network Boost Driver Is Installed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2265
 testRunner.When("Turn on network boost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2266
 testRunner.When("The user turn on auto close toggle within home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2267
 testRunner.Then("The auto close toggle status is on or off within home page on", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2268
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2269
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2270
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2271
 testRunner.When("Click The Close Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2272
 testRunner.Given("Adjust The System Time To 1 Days Later", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 2273
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2274
 testRunner.When("Launch the specifie game GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2275
 testRunner.When("Stop the specified app GameWorldOfWarcraft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2276
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2277
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2278
 testRunner.Then("Auto Close Effect Toast Message Should Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2279
 testRunner.When("Click The Learn More Button \'\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2280
 testRunner.When("No Any Operation For About 5S", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2281
 testRunner.Then("Auto Close Effect Toast Message Should Not Be Shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2282
 testRunner.When("Check The Toast Message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 2283
 testRunner.Then("The auto close will be shown within subpage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 2284
 testRunner.Given("Set System Time Automatically To Sync", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
